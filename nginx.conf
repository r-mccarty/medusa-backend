# Nginx Configuration for MedusaJS Backend
# This file should be placed in /etc/nginx/sites-available/medusa
# Then symlinked to /etc/nginx/sites-enabled/medusa
#
# Commands:
#   sudo cp nginx.conf /etc/nginx/sites-available/medusa
#   sudo ln -s /etc/nginx/sites-available/medusa /etc/nginx/sites-enabled/medusa
#   sudo nginx -t
#   sudo systemctl reload nginx

# Upstream configuration for Medusa backend
upstream medusa_backend {
    server 127.0.0.1:9000;
    keepalive 64;
}

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=medusa_limit:10m rate=10r/s;

# HTTP server - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;

    # For Let's Encrypt certificate renewal
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;

    # SSL configuration
    # Update these paths after obtaining SSL certificates
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/medusa-access.log;
    error_log /var/log/nginx/medusa-error.log;

    # Max upload size (for product images, etc.)
    client_max_body_size 50M;

    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;

    # Main application
    location / {
        # Apply rate limiting
        limit_req zone=medusa_limit burst=20 nodelay;

        proxy_pass http://medusa_backend;
        proxy_redirect off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Admin dashboard
    location /app {
        proxy_pass http://medusa_backend;
        proxy_redirect off;
    }

    # Admin API routes
    location /admin {
        proxy_pass http://medusa_backend;
        proxy_redirect off;
    }

    # Store API routes
    location /store {
        proxy_pass http://medusa_backend;
        proxy_redirect off;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://medusa_backend;
        access_log off;
    }

    # Static files caching (if any)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://medusa_backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# Alternative configuration for development/testing (HTTP only)
# Uncomment this if you want to test without SSL first
# server {
#     listen 80;
#     listen [::]:80;
#     server_name your-domain.com www.your-domain.com;
#
#     access_log /var/log/nginx/medusa-access.log;
#     error_log /var/log/nginx/medusa-error.log;
#
#     client_max_body_size 50M;
#
#     location / {
#         proxy_pass http://medusa_backend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }
